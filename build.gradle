plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}


////////1 сборка фронта
plugins {
    id "com.github.node-gradle.node" version "2.2.4"
    //id "com.moowork.node" version "1.3.1"
}

task buildFront(type: YarnTask) {
    // add the express package only // добавить только экспресс-пакет
    args = ['build']
}

yarn_install.dependsOn(yarn_cache_clean) //чистит
buildFront.dependsOn(yarn_install) //устанавливает
processResources.dependsOn(buildFront) //хук для гредла в начале
//////////////////////////////////////////

group = 'app.web.pavelk.mouth1'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

node {
//    version = '0.12.18'
//    distBaseUrl = 'https://nodejs.org/dist'


    download = true
}

dependencies {

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    compile group: 'org.jsoup', name: 'jsoup', version: '1.13.1'


    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    //для сохранения сесии // сереализует классы и ложит их в базу
 //   implementation 'org.springframework.session:spring-session-jdbc'


    // для асинхроного общения
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-config
    compile group: 'org.springframework.security', name: 'spring-security-config', version: '5.3.3.RELEASE'
// https://mvnrepository.com/artifact/org.springframework.security/spring-security-oauth2-jose
    compile group: 'org.springframework.security', name: 'spring-security-oauth2-jose', version: '5.3.3.RELEASE'
// https://mvnrepository.com/artifact/org.springframework.security/spring-security-oauth2-client
    compile group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: '5.3.3.RELEASE'

  //  import org.springframework.boot.autoconfigure.security.oauth2.resource.PrincipalExtractor;

    //секюрити и что еще
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    // спринг секюрити как отдельный проект
//
//    //implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.3.1.RELEASE'
//
//// https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2
//    compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.5.0.RELEASE'
//
//    // https://mvnrepository.com/artifact/org.springframework.security.oauth.boot/spring-security-oauth2-autoconfigure
//    compile group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: '2.3.1.RELEASE'

    // https://mvnrepository.com/artifact/org.springframework.security.oauth.boot/spring-security-oauth2-autoconfigure
    compile group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: '2.3.1.RELEASE'



    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'
    //implementation 'org.projectlombok:lombok'
  //  implementation 'javax.xml.bind:jaxb-api'

    // https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-impl
    implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '3.0.0-M4'


    compile 'io.sentry:sentry-spring:1.7.30'


//
//    compile('com.sun.xml.bind:jaxb-core')
//    compile('com.sun.xml.bind:jaxb-impl')
//


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'


    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}
